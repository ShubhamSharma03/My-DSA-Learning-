   In this u first sort and then compare the first  element second value with the first value of second element is 
   it is greater than put the max of first element second value and second element second value.
   
   
   Optimised Approach : TC : O(NLogN) SC: O(N)
   
   vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>> ans;
        int n=intervals.size();
        
        
        sort(intervals.begin(),intervals.end());
        
        ans.push_back(intervals[0]);
        
        if(n==0) return ans;
        int j=0;
        for(int i=1;i<n;i++)
        {
           
            if(ans[j][1]  >= intervals[i][0])
            {
                ans[j][1]=max(ans[j][1],intervals[i][1]);
            }
            else
            {
                j++;
                ans.push_back(intervals[i]);
            }
        }
        return ans;
    }
};
