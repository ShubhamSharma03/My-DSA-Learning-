I tried it using DFS approach 

Time Complexity : O(N^2) Space Complexity: O(1)

 int dfs(vector<vector<int> >&grid,int i,int j)
    {  
        int n=grid.size();
        int m=grid[0].size();
        if(i<0 || i>=n || j<0 || j>=m || !grid[i][j]) return 0;
        
        grid[i][j]=0;
        
        return 1+dfs(grid,i+1,j)+dfs(grid,i-1,j)+dfs(grid,i,j+1)+dfs(grid,i,j-1);
    }
    public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        
        int ans=0;
        int maxi=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j])
                {
                   ans=dfs(grid,i,j);
                   maxi=max(ans,maxi);
                }
            }
        }
        return maxi;
    }
};
