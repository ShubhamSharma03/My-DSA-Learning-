I have tried this ques using two mehods 

1. Using modifying the Array- TC: O(N) SC:O(1)

    int findDuplicate(vector<int>& nums) {
        int n=nums.size();
        int ans=0;
        
        for(int i=0;i<n;i++)
        {
            if(nums[abs(nums[i])]>0)
            {
                nums[abs(nums[i])] = -1*nums[abs(nums[i])];
                
            }
            else
            {
                ans=abs(nums[i]);
            }
        }
        return ans;
    }
};

2. Optimised Approach- TC: O(N) SC: O(1)

int findDuplicate(vector<int>& nums) {
        int slow=nums[0];
        int fast=nums[0];
        
        do
        {
            slow=nums[slow];
            fast=nums[nums[fast]];
        }
        while (slow!=fast);
        fast=nums[0];
        
        while(slow!=fast)
        {
            slow =nums[slow];
            fast=nums[fast];
        }
        return slow;
    }
};
